package Week_III_Lab_3;

public class Library {
    String address;
    Book book;
    String bookTitle;



    // constructor for the the address.
    public Library(String address) {
       this.address = address;
       this.bookTitle = bookTitle;

    }



    public Library() {
    }
    // Add the missing implementation to this class

     // BORROWING A BOOK   ******* partial working
    public void borrowBook(String book){
        System.out.println("You have successfully Borrowed: "+book);
    }
    



// AVAILABLE BOOKS
    public void printAvailableBooks(){
        System.out.println("Getting book Titles "+ bookTitle);
    }
// ADDING A BOOK
//    public void addBook(String abook){
//        book = new Book(abook);
//    }

    public Book addBook(Book book){
       return book;

    }



    //  ***   BELOW ARE THE RESOLVED METHOD ISSUES *** //

    // ADDRESS RESOLVED.
    public void printAddress(){
        System.out.println(address);
    }
    // OPENING HOURS RESOLVED.
    public static void printOpeningHours(){
        System.out.println("Libraries are open daily from 9am to 5pm.");
    }

    // **** THIS IS THE MAIN METHOD OF THE CODE SOLUTION. ****
    public static void main(String[] args) {
// Create two libraries
        Library firstLibrary = new Library("10 Main St.");
        Library secondLibrary = new Library("228 Liberty St.");
// Add four books to the first library
        firstLibrary.addBook(new Book("The Da Vinci Code"));
        firstLibrary.addBook(new Book("Le Petit Prince"));
        firstLibrary.addBook(new Book("A Tale of Two Cities"));
        firstLibrary.addBook(new Book("The Lord of the Rings"));

        // *** THESE ARE RESOLVED ***
// Print opening hours and the addresses
        System.out.println("Library hours:");
        printOpeningHours();
        System.out.println();
        System.out.println("Library addresses:");
        firstLibrary.printAddress();
        secondLibrary.printAddress();
        System.out.println();

// Try to borrow The Lords of the Rings from both libraries
        System.out.println("Borrowing The Lord of the Rings:");
        firstLibrary.borrowBook("The Lord of the Rings");
        firstLibrary.borrowBook("The Lord of the Rings");
        secondLibrary.borrowBook("The Lord of the Rings");
        System.out.println();

// Print the titles of all available books from both libraries
        System.out.println("Books available in the first library:");
        firstLibrary.printAvailableBooks();
        System.out.println();
        System.out.println("Books available in the second library:");
        secondLibrary.printAvailableBooks();
        System.out.println();

// Return The Lords of the Rings to the first library

        System.out.println("Returning The Lord of the Rings:");
//        firstLibrary.returnBook("The Lord of the Rings");
        System.out.println();
// Print the titles of available from the first library
        System.out.println("Books available in the first library:");
//        firstLibrary.printAvailableBooks();
    }

//  public class Book{
//        String bookTitle;
//
//        public Book(String bookTitle) {
//            this.bookTitle = bookTitle;
//        }
//
//    }

}


